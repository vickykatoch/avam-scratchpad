"use strict";!function(){function e(e,o){var t="object"!=typeof e||o instanceof Array?2:1;return Array.prototype.slice.call(arguments,0,t)}var o={deleteRowById:function(o,t){return this.source.findRow.apply(this.source,e(o,t).concat([null]))},eraseRowById:function(o,t){return this.source.findRow.apply(this.source,e(o,t).concat([void 0]))},getRowIndexById:function(e,o){return this.source.findRow.apply(this.source,arguments),this.source.getProperty("foundRowIndex")},getRowById:function(e,o){return this.source.findRow.apply(this.source,arguments)},modifyRowById:function(e,o,t,r){var n,i,c;if("object"!=typeof e||o instanceof Array?n=this.source.findRow(e,o):(n=this.source.findRow(e),r=t,t=o),n)if("object"!=typeof t)n[t]=r;else{i=r instanceof Array?r:Object.keys(t);for(var s in i)c=i[s],n[c]=t[c]}return n},replaceRowById:function(e,o,t){if("object"!=typeof e||o instanceof Array||(t=o),"object"!=typeof t)throw"Expected an object for replacement but found "+typeof t+".";return this.source.findRow.apply(this.source,arguments)}};Object.defineProperties(o,{install:{value:function(e,o){o=o||Object.getPrototypeOf(e.behavior.dataModel),o.mixIn(this)}},mixInTo:{value:function(e){throw"rowById.mixInTo(target) removed as of Hypergrid 1.2.0 in favor of grid.installPlugins([[rowById, target]]) where target if omitted defaults to grid's dataModel prototype."}}}),window.fin.Hypergrid.rowById=o}();